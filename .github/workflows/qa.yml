name: QA

on:
    pull_request:
        branches:
            - release/*

jobs:
    backend:
        runs-on: ubuntu-22.04
        strategy:
            matrix:
                php: [ '7.4', '8.1' ]
        name: PHP ${{ matrix.php }}
        steps:
            -   uses: actions/checkout@v3

            -   id: composer-cache
                run: echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_OUTPUT

            -   uses: actions/cache@v3
                with:
                    path: ${{ steps.composer-cache.outputs.COMPOSER_CACHE_DIR }}
                    key: composer-${{ runner.OS }}-${{ hashFiles('composer.json') }} }}
                    restore-keys: |
                        composer-${{ runner.OS }}-
                        composer-

            -   uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    coverage: none # disable xdebug, pcov
                    tools: cs2pr

            -   run: composer validate --strict
            -   run: composer config --global github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}
            -   run: composer config --global --auth http-basic.repo.packagist.com token ${{ secrets.COMPOSER_PACKAGIST_COM_TOKEN }}
            -   run: composer config repositories.private-packagist composer https://repo.packagist.com/zicht/
            -   run: composer install --prefer-dist --no-progress --no-scripts
            -   if: always()
                run: composer run-script lint -- --format=checkstyle | cs2pr
            -   if: always()
                run: composer run-script analysis -- --php-version=${{ matrix.php }} --no-suggestions --output-format=github
            -   if: always()
                run: composer run-script test

    translations:
        runs-on: ubuntu-22.04
        steps:
            -   uses: actions/checkout@v3
            -   uses: actions/setup-python@v2
                with:
                    python-version: '3.7'
            -   run: python -m pip install --upgrade pip
            -   run: pip install yaz_messaging_plugin
            -   run: yaz-messaging version
            -   run: yaz-messaging check